@model Monthley.Models.ExpenseModels.ExpenseCreate

@{
    ViewBag.Title = "Add an Expense";
}

<h2>Add a New Expense</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-2"></div>
        <div class="col-md-10">
            <small>Enter a brief description of the expense (Ex. <i>Rent</i> or <i>Groceries</i>)</small>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-2"></div>
        <div class="col-md-10">
            <small>Choose the type of expense</small>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CategoryType, "-- Select Type --", new { @class = "form-control", @id = "categoryType", @onchange = "TypeShowHide()" })
                @Html.ValidationMessageFor(model => model.CategoryType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-2"></div>
        <div class="col-md-10">
            <small>Enter the amount</small>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="firstDueDate" style="display:none">
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <small>What is the first time this expense will be due?</small>
            </div>
        </div>
        <div id="onceDueDate" style="display:none">
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <small>When is this one-time expense due?</small>
            </div>
        </div>
        <div class="form-group" id="dueDate" style="display:none">
            @Html.LabelFor(model => model.InitialDueDate, "Due Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InitialDueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InitialDueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="billFrequency" style="display:none">
            <div class="col-md-3"><b>How often do you pay this bill?</b></div>
            <div class="col-md-9"></div>
            <br />
        </div>
        <div id="savingFrequency" style="display:none">
            <div class="col-md-3"><b>How often do move this money to savings?</b></div>
            <div class="col-md-9"></div>
            <br />
        </div>
        <table id="expenseCreateTable" style="display:none">
            <tr>
                <td class="col-md-1 text-right"></td>
                <td class="col-md-1 text-right"><small>Ex: &nbsp;<i>Every</i></small></td>
                <td class="col-md-1 text-center"><small><i>1</i></small></td>
                <td class="col-md-3">&nbsp;&nbsp;<small><i>month(s)</i></small></td>
                <td class="col-md-6"></td>
            </tr>

            <tr>
                <td class="col-md-1 text-right"></td>
                <td class="col-md-1 text-right"><small>Ex: &nbsp;<i>Every</i></small></td>
                <td class="col-md-1 text-center"><small><i>4</i></small></td>
                <td class="col-md-3">&nbsp;&nbsp;<small><i>week(s)</i></small></td>
                <td class="col-md-6"></td>
            </tr>

            <tr>
                <td class="col-md-1"></td>
                <td class="col-md-1 text-right">Every</td>
                <td class="col-md-1">
                    @Html.EditorFor(model => model.FrequencyFactor, new { htmlAttributes = new { @class = "form-control" } })
                </td>
                <td class="col-md-3">
                    @Html.EnumDropDownListFor(model => model.ExpenseFreqType, "-- Select --", new { @class = "form-control", @id = "expenseFreqType" })
                </td>
                <td class="col-md-6"></td>
            </tr>

            <tr>
                <td class="col-md-1"></td>
                <td class="col-md-1"></td>
                <td class="col-md-1">
                    @Html.ValidationMessageFor(model => model.FrequencyFactor, "", new { @class = "text-danger" })
                </td>
                <td class="col-md-3"></td>
                <td class="col-md-6"></td>
            </tr>
        </table>


        <div id="endDateOption" style="display:none">
            <br />
            <div class="col-md-4">
                <b>Do you want to set an end date for this expense?</b>
            </div>
            <div class="col-md-8"></div>
            <br />
            <div class="form-group">
                <div class="col-md-2"></div>
                <div class="col-md-10">
                    <select class="form-control" id="endDateChoice" , onchange="EndDateShowHide()">
                        <option>No</option>
                        <option>Yes</option>
                    </select>
                </div>
            </div>
        </div>

        <div id="lastDueDate" style="display:none">
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <small>You won't pay this expense after this date</small>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <br />
            <br />
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Expenses", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var list = document.getElementById("categoryType");
        console.log(list.childNodes[10]);
        list.removeChild(list.childNodes[10]);

        var list2 = document.getElementById("expenseFreqType");
        console.log(list2.childNodes[6]);
        list2.removeChild(list2.childNodes[6]);

        function TypeShowHide() {
            var categoryType = document.getElementById("categoryType");

            var firstDueDate = document.getElementById("firstDueDate");
            firstDueDate.style.display = (categoryType.value == 1 || categoryType.value == 3) ? "block" : "none";

            var onceDueDate = document.getElementById("onceDueDate");
            onceDueDate.style.display = categoryType.value == 4 ? "block" : "none";

            var dueDate = document.getElementById("dueDate");
            dueDate.style.display = (categoryType.value == 1 || categoryType.value == 3 || categoryType.value == 4) ? "block" : "none";

            var billFrequency = document.getElementById("billFrequency");
            billFrequency.style.display = categoryType.value == 1 ? "block" : "none";

            var savingFrequency = document.getElementById("savingFrequency");
            savingFrequency.style.display = categoryType.value == 3 ? "block" : "none";

            var expenseCreateTable = document.getElementById("expenseCreateTable");
            expenseCreateTable.style.display = (categoryType.value == 1 || categoryType.value == 3) ? "block" : "none";

            var endDateOption = document.getElementById("endDateOption");
            endDateOption.style.display = (categoryType.value == 1 || categoryType.value == 3) ? "block" : "none";

            var lastDueDate = document.getElementById("lastDueDate");
            if (categoryType.value == 2 || categoryType.value == 4) {
                lastDueDate.style.display = "none";
            }
            if (categoryType.value == 2 || categoryType.value == 4) {
                selectElement('endDateChoice', "No")
            }
        }

        function EndDateShowHide() {
            var endDateChoice = document.getElementById("endDateChoice");

            var lastDueDate = document.getElementById("lastDueDate");
            lastDueDate.style.display = endDateChoice.value == "Yes" ? "block" : "none";
        }

        function selectElement(id, valueToSelect) {
            let element = document.getElementById(id);
            element.value = valueToSelect;
        }
    </script>
}
